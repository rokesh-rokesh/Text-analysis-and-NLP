# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y7rAO-FdT958IZipsr2cdbNwn-VPH65u
"""

import re
from itertools import chain
import nltk
from nltk.tokenize import word_tokenize
from nltk.tokenize import sent_tokenize
from nltk.corpus import words
import os
import pandas as pd

nltk.download('all')

def Analysis_of_Readability(f):
  #Converting String
  string = ''''''
  for j in f:
    string += " " + j

  #Calculating Average Sentence Length

  number_of_words = len(word_tokenize(string))
  number_of_sentences = len(sent_tokenize(string))

  #Average Sentence Length = the number of words / the number of sentences
  Average_Sentence_length = round(number_of_words / number_of_sentences,2)
  print("Average_Sentence_length:",Average_Sentence_length)

  #Calculating Percentage of Complex words

  #considering if word is more than or equal to two syllables
  import re

  def count_syllables(word):
    return len(
        re.findall('(?!e$)[aeiouy]+', word, re.I) +
        re.findall('^[^aeiouy]*e$', word, re.I)
    )

  Complex = 0
  for w in string.split():
    if count_syllables(w) >= 2:
        Complex += 1

  number_of_words = len(word_tokenize(string))
  number_of_complex_words = Complex

  #Percentage of Complex words = the number of complex words / the number of words
  Percentage_of_Complex_words = round(number_of_complex_words / number_of_words,2)
  print("Percentage_of_Complex_words:",Percentage_of_Complex_words)

  #Calculating Fog Index

  #Fog Index = 0.4 * (Average Sentence Length + Percentage of Complex words)
  Fog_Index = round(0.4 * ( Average_Sentence_length + Percentage_of_Complex_words),2)
  print("Fog Index:",Fog_Index)

  return Average_Sentence_length,Percentage_of_Complex_words,Fog_Index

asl,pcw,fi = [],[],[]

for i in range(37,151):
  f = open("/content/sample_data/"+str(i)+".txt",'r')
  result = Analysis_of_Readability(f)
  print("Analysis_of_Readability:",i)
  asl.append(result[0])
  pcw.append(result[1])
  fi.append(result[2])

#Creating a dataframe for store and organize all results
df = pd.DataFrame(
    {'Average Sentence length':asl,
     'Percentage of Complex words':pcw,
     'Fog Index':fi})

from google.colab import files
df.to_csv('Analysis_of_Readability_result',index=False)
files.download('Analysis_of_Readability_result')

